version: '3.8'

services:
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
    container_name: atp-client-database
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DATABASE_EXTERNAL_PORT}:5432"
    volumes:
      - atp-client-db-volume:/var/lib/postgresql/data
    networks:
      - atp-client-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: atp-client-server
    ports:
      - "${SERVER_EXTERNAL_PORT}:${SERVER_PORT}"
    depends_on:
      database:
        condition: service_healthy
    environment:
      PORT: ${SERVER_PORT}
      RUN_MODE: ${RUN_MODE}
      MAIN_DB_CONNECTION: ${MAIN_DB_CONNECTION}
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      ATP_ROUTER_HOST: ${ATP_ROUTER_HOST}
      ATP_ROUTER_API_KEY: ${ATP_ROUTER_API_KEY}
    networks:
      - atp-client-network
    restart: unless-stopped

  web-client:
    build:
      context: ./web-client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_API_WS_URL: ${VITE_API_WS_URL}
    container_name: atp-client-web
    ports:
      - "${WEB_PORT}:80"
    depends_on:
      - server
    networks:
      - atp-client-network
    restart: unless-stopped

volumes:
  atp-client-db-volume:
    driver: local

networks:
  atp-client-network:
    driver: bridge
    name: atp-client-network 